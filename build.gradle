plugins {
	id 'org.springframework.boot' version '2.6.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "io.beekeeper.gradle.plugin" version "0.10.1"
	id 'jacoco'
	id 'application'
}

/* To run class from command line */
mainClassName = 'com.accolite.intervieworganiser.InterviewOrganiserApplication'

/* To create a runnable jar  in GradleJavaProject\build\libs
 * then java -jar GradleJavaProject.jar
 */
jar {
	manifest {
		attributes 'Main-Class': 'com.accolite.intervieworganiser.InterviewOrganiserApplication'
	}
}

group = 'com.accolite'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation ('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2', version: '2.6.7'
	implementation 'mysql:mysql-connector-java:8.0.28'
	implementation 'org.projectlombok:lombok:1.18.20'
	implementation 'junit:junit:4.13.1'
	testImplementation group: 'junit', name: 'junit', version: '4.13.2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: '5.6.2'
	testImplementation group: 'com.h2database', name: 'h2', version: '2.1.212'
	testImplementation group: 'org.testcontainers', name: 'mysql', version: '1.17.1'
	testImplementation group: 'org.testcontainers', name: 'junit-jupiter', version: '1.17.1'
	implementation 'org.mockito:mockito-core:3.8.0'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'org.hibernate.orm', name: 'hibernate-gradle-plugin', version: '6.0.0.Alpha6'
	implementation 'org.springframework.boot:spring-boot-starter-security:2.6.5'
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
	implementation group: 'com.google.api-client', name: 'google-api-client', version: '1.33.4'
	implementation group: 'org.json', name: 'json', version: '20220320'
	implementation group: 'javax.validation', name: 'validation-api', version: '2.0.0.Final'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.6.7'

}

jacoco {
	toolVersion = "0.8.7"
}

test{
	useJUnitPlatform()
	finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}

configurations{
	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}

task generateRestApiDocs(type: Javadoc) {
	source = sourceSets.main.allJava
	destinationDir = reporting.file("rest-api-docs")
	options.addStringOption('Xdoclint:none', '-quiet')
	options.addStringOption('encoding', 'UTF-8')
	options.addStringOption('charSet', 'UTF-8')
}

